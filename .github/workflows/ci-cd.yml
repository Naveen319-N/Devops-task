name: CI/CD Pipeline to EKS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, Tag, and Push Docker Image to ECR
      env:
        ECR_REGISTRY: 850191424857.dkr.ecr.ap-south-1.amazonaws.com
        ECR_REPOSITORY: my-app
      run: |
        IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

    - name: Update kubeconfig for EKS
      run: aws eks update-kubeconfig --region ap-south-1 --name my-eks-cluster

    - name: Deploy new version to EKS
      env:
        ECR_REGISTRY: 850191424857.dkr.ecr.ap-south-1.amazonaws.com
        ECR_REPOSITORY: my-app
      run: |
        kubectl set image deployment/hello-deployment hello=$ECR_REGISTRY/$ECR_REPOSITORY:${{ env.IMAGE_TAG }}
        kubectl rollout status deployment/hello-deployment
